#!/bin/sh
### BEGIN INIT INFO
# Provides: hygenlogger
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Log key metrics on the Planetary Power Hygen
# Description:       Read data about the battery, temperatures, customer
# power usage, and engine stats. Log these to file, and when appropriate,
# send signals to update the user interface panel
### END INIT INFO

# Using the LSB functions
# Standard followed:
# http://refspecs.linuxbase.org/LSB_3.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
. /lib/lsb/init-functions

# Process name (for display)
NAME=hygenlogger
# Daemon name (actual executable)
DAEMON=/home/hygen/hygenlogger
# pid file for the daemon
PIDFILE=/var/run/hygenlogger.pid

# Test if the daemon is not there
# exit "Program not installed" if missing
test -x $DAEMON || exit 5

case $1 in
    start)
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON "$NAME process" && status="0" || status="$?"
            # If status is SUCCESS, don't start again
            if [ $status = "0" ]; then
                exit # Exit
            fi
        fi
        # Start the daemon
        log_daemon_msg "Starting the process" "$NAME"
        # Start the daemon with the help of start-stop-daemon
        # Log the start
        if start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON "Stopping the $NAME process" && status="0" || status="$?"
            if [ "$status" = 0 ]; then
                start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
                /bin/rm -rf $PIDFILE
            fi
        else
            log_daemon_msg "$NAME process is not running"
            log_end_msg 0
        fi
        ;;
    restart|reload|force-reload)
        # Restart the daemon
        $0 stop && $sleep 2 && $0 start
        ;;
    status)
        # Check the status of the process
        if [ -e $PIDFILE ]; then
            status_of_proc -p $PIDFILE $DAEMON "$NAME process" && exit 0 || exit $?
        else
            log_daemon_msg "$NAME Process is not running"
            log_end_msg 0
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 2
        ;;
esac

exit 0
